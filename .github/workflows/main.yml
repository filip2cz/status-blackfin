name: "Status Client written in C"

on:
  push:
    branches:
      - main
      
jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - run: mkdir build

      - run: sudo apt update
      - run: sudo apt install python2 python2-dev
      - run: curl https://bootstrap.pypa.io/pip/2.7/get-pip.py --output get-pip.py
      - run: sudo python2 get-pip.py
      - run: python2 -m pip install nuitka

      - run: sudo apt install gcc gcc-multilib

      - run: python2 -m nuitka --standalone client.py
      - run: mv ./client.dist/client.bin ./build/client-x64.bin
      - run: rm -r client.dist && rm -r client.build
      - run: sudo apt purge gcc-multilib

      - run: sudo apt install gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf

      - run: nuitka --cc=aarch64-linux-gnu-gcc --standalone client.py
      - run: mv ./client.dist/client.bin ./build/client-aarch64.bin
      - run: rm -r client.dist && rm -r client.build

      - run: nuitka --cc=arm-linux-gnueabihf-gcc --standalone client.py
      - run: mv ./client.dist/client.bin ./build/client-armv7l.bin
      - run: rm -r client.dist && rm -r client.build

      # - run: sudo apt purge gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf

      # - run: sudo apt install gcc-arm-linux-gnueabi
      # - run: arm-linux-gnueabi-gcc -march=armv5te ./status.c -o ./build/status-linux-armv5te
      # - run: sudo apt purge gcc-arm-linux-gnueabi

      # - run: wget https://master.dl.sourceforge.net/project/adi-toolchain/2014R1/2014R1-RC2/x86_64/blackfin-toolchain-2014R1-RC2.x86_64.tar.bz2
      # - run: wget https://master.dl.sourceforge.net/project/adi-toolchain/2014R1/2014R1-RC2/x86_64/blackfin-toolchain-uclibc-default-2014R1-RC2.x86_64.tar.bz2
      # - run: tar -xf blackfin-toolchain-2014R1-RC2.x86_64.tar.bz2
      # - run: tar -xf blackfin-toolchain-uclibc-default-2014R1-RC2.x86_64.tar.bz2

      # - run: ./opt/uClinux/bfin-linux-uclibc/bin/bfin-linux-uclibc-gcc ./status.c -o ./build/status-linux-blackfin
          
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        
      - uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "./build/client*"
          commit: main
          generateReleaseNotes: true
          draft: true
          # tag: ${{ github.event.head_commit.id }}
          tag: ${{ steps.vars.outputs.sha_short }}

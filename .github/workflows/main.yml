name: "Status Client written in C"

on:
  push:
    branches:
      - main
      
jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
          
      - run: mkdir build

      - run: sudo apt update

      - run: sudo apt install gcc gcc-multilib
      - run: gcc --version
      - run: ldd --version
      - run: gcc ./status.c -o ./build/status-linux-x64
      - run: gcc -m32 ./status.c -o ./build/status-linux-x86
      - run: sudo apt purge gcc-multilib

      - run: sudo apt install gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf
      - run: aarch64-linux-gnu-gcc ./status.c -o ./build/status-linux-aarch64
      - run: arm-linux-gnueabihf-gcc ./status.c -o ./build/status-linux-armv7l
      - run: sudo apt purge gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf

      - run: sudo apt install gcc-arm-linux-gnueabi
      - run: arm-linux-gnueabi-gcc -march=armv5te ./status.c -o ./build/status-linux-armv5te
      - run: sudo apt purge gcc-arm-linux-gnueabi

      - run: wget https://master.dl.sourceforge.net/project/adi-toolchain/2014R1/2014R1-RC2/x86_64/blackfin-toolchain-2014R1-RC2.x86_64.tar.bz2
      - run: wget https://master.dl.sourceforge.net/project/adi-toolchain/2014R1/2014R1-RC2/x86_64/blackfin-toolchain-uclibc-default-2014R1-RC2.x86_64.tar.bz2
      - run: tar -xf blackfin-toolchain-2014R1-RC2.x86_64.tar.bz2
      - run: tar -xf blackfin-toolchain-uclibc-default-2014R1-RC2.x86_64.tar.bz2

      - run: ./opt/uClinux/bfin-linux-uclibc/bin/bfin-linux-uclibc-gcc ./status.c -o ./build/status-linux-blackfin
          
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        
      - uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "./build/status*"
          commit: main
          generateReleaseNotes: true
          draft: true
          # tag: ${{ github.event.head_commit.id }}
          tag: ${{ steps.vars.outputs.sha_short }}
